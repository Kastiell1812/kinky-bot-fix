# handlers/menu.py
from aiogram import types, Dispatcher
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from db.database import get_user_language
from loader import bot

RULES_UK = (
    "üìú –ü—Ä–∞–≤–∏–ª–∞ –±–æ—Ç–∞:\n\n"
    "1. –ó–∞–±–æ—Ä–æ–Ω–µ–Ω–æ —Å–∫–∞–º–∏—Ç–∏ ‚Äî –≤—Å—ñ –¥–∞–Ω—ñ –±—É–¥—É—Ç—å –ø–µ—Ä–µ–¥–∞–Ω—ñ –ø—Ä–∞–≤–æ–æ—Ö–æ—Ä–æ–Ω—Ü—è–º.\n"
    "2. –ñ–æ–¥–Ω–æ—ó –ø–æ–ª—ñ—Ç–∏–∫–∏.\n"
    "3. –ñ–æ–¥–Ω–∏—Ö –ø—Ä–æ–¥–∞–∂—ñ–≤."
)

RULES_RU = (
    "üìú –ü—Ä–∞–≤–∏–ª–∞ –±–æ—Ç–∞:\n\n"
    "1. –ó–∞–ø—Ä–µ—â–µ–Ω–æ —Å–∫–∞–º–∏—Ç—å ‚Äî –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –ø–µ—Ä–µ–¥–∞–Ω—ã –ø—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–∏—Ç–µ–ª—å–Ω—ã–º –æ—Ä–≥–∞–Ω–∞–º.\n"
    "2. –ù–∏–∫–∞–∫–æ–π –ø–æ–ª–∏—Ç–∏–∫–∏.\n"
    "3. –ù–∏–∫–∞–∫–∏—Ö –ø—Ä–æ–¥–∞–∂."
)

# –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é –∑ –∫–Ω–æ–ø–∫–æ—é "–ü—Ä–∞–≤–∏–ª–∞"
def get_main_menu():
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(KeyboardButton("üîç –ü–µ—Ä–µ–≥–ª—è–¥ –∞–Ω–∫–µ—Ç"))
    keyboard.add(KeyboardButton("üìú –ü—Ä–∞–≤–∏–ª–∞"))
    # –¥–æ–¥–∞–π —ñ–Ω—à—ñ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –∑–∞ –ø–æ—Ç—Ä–µ–±–∏
    return keyboard

async def cmd_start(message: types.Message):
    language = await get_user_language(message.from_user.id)
    if language == "uk":
        await message.answer("–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ! –û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:", reply_markup=get_main_menu())
    else:
        await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=get_main_menu())

async def cmd_rules(message: types.Message):
    language = await get_user_language(message.from_user.id)
    if language == "uk":
        await message.answer(RULES_UK)
    else:
        await message.answer(RULES_RU)

def register_handlers_menu(dp: Dispatcher):
    dp.register_message_handler(cmd_start, commands=["start"])
    dp.register_message_handler(cmd_rules, commands=["rules"])
    dp.register_message_handler(cmd_rules, lambda message: message.text == "üìú –ü—Ä–∞–≤–∏–ª–∞")
