from aiogram import types, Dispatcher
from loader import bot
from handlers.menu import show_main_menu

async def process_verify(callback: types.CallbackQuery):
    user_id = int(callback.data.split(":")[1])
    await callback.message.edit_reply_markup()  # –ü—Ä–∏–±—Ä–∞—Ç–∏ –∫–Ω–æ–ø–∫–∏
    await bot.send_message(callback.from_user.id, "–ê–Ω–∫–µ—Ç—É –≤–µ—Ä–∏—Ñ—ñ–∫–æ–≤–∞–Ω–æ.")
    await bot.send_message(user_id, "‚úÖ –¢–≤–æ—é –∞–Ω–∫–µ—Ç—É –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ! –¢–µ–ø–µ—Ä —Ç–∏ –º–æ–∂–µ—à –ø–µ—Ä–µ–≥–ª—è–¥–∞—Ç–∏ —ñ–Ω—à–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤.")
    await show_main_menu(user_id, bot)  # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∫–Ω–æ–ø–∫–∏
    from handlers.profiles import start_browsing_after_verification
    await start_browsing_after_verification(user_id)

async def process_reject(callback: types.CallbackQuery):
    user_id = int(callback.data.split(":")[1])
    await callback.message.edit_reply_markup()
    await bot.send_message(user_id, "‚ùå –¢–≤–æ—é –∞–Ω–∫–µ—Ç—É –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ. –°–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑.")

async def process_repeat_video(callback: types.CallbackQuery):
    user_id = int(callback.data.split(":")[1])
    await callback.message.edit_reply_markup()
    await bot.send_message(user_id, "üîÑ –ê–¥–º—ñ–Ω –ø—Ä–æ—Å–∏—Ç—å –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –Ω–æ–≤–µ –≤—ñ–¥–µ–æ –¥–ª—è –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—ó. –ù–∞–¥—ñ—à–ª–∏ –≤—ñ–¥–µ–æ —É –≤—ñ–¥–ø–æ–≤—ñ–¥—å.")

def register_handlers_admin(dp: Dispatcher):
    dp.register_callback_query_handler(process_verify, lambda c: c.data.startswith("verify:"))
    dp.register_callback_query_handler(process_reject, lambda c: c.data.startswith("reject:"))
    dp.register_callback_query_handler(process_repeat_video, lambda c: c.data.startswith("repeat_video:"))
