from aiogram import types, Dispatcher
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from db.database import get_other_users, add_like, check_match, get_user_language
from loader import bot

user_profiles = {}

async def show_profile(chat_id: int, user_id: int):
    data = user_profiles.get(user_id)
    if not data:
        users = await get_other_users(user_id)
        if not users:
            language = await get_user_language(user_id)
            msg = "–ù–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∞–Ω–∫–µ—Ç." if language == "uk" else "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–Ω–∫–µ—Ç."
            await bot.send_message(chat_id, msg)
            return
        user_profiles[user_id] = {"index": 0, "profiles": users}
        data = user_profiles[user_id]

    index = data["index"]
    profiles = data["profiles"]

    if index >= len(profiles):
        language = await get_user_language(user_id)
        msg = "–¶–µ –≤—Å—ñ –∞–Ω–∫–µ—Ç–∏, —è–∫—ñ —î –Ω–∞ –∑–∞—Ä–∞–∑." if language == "uk" else "–≠—Ç–æ –≤—Å–µ –∞–Ω–∫–µ—Ç—ã –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç."
        await bot.send_message(chat_id, msg)
        return

    profile = profiles[index]
    uid, name, age, city, preferences, photo_id = profile
    language = await get_user_language(user_id)
    if language == "uk":
        text = f"–Ü–º'—è: {name}\n–í—ñ–∫: {age}\n–ú—ñ—Å—Ç–æ: {city}\n–§–µ—Ç–∏—à—ñ: {preferences}"
    else:
        text = f"–ò–º—è: {name}\n–í–æ–∑—Ä–∞—Å—Ç: {age}\n–ì–æ—Ä–æ–¥: {city}\n–§–µ—Ç–∏—à–∏: {preferences}"

    keyboard = InlineKeyboardMarkup(row_width=2)
    keyboard.add(
        InlineKeyboardButton("‚ù§Ô∏è", callback_data=f"like:{uid}"),
        InlineKeyboardButton("üëé", callback_data="dislike")
    )

    await bot.send_photo(chat_id, photo=photo_id, caption=text, reply_markup=keyboard)

async def handle_callback(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    data = user_profiles.get(user_id)

    if not data:
        language = await get_user_language(user_id)
        msg = "–ê–Ω–∫–µ—Ç –±—ñ–ª—å—à–µ –Ω–µ–º–∞—î." if language == "uk" else "–ê–Ω–∫–µ—Ç –±–æ–ª—å—à–µ –Ω–µ—Ç."
        await callback.answer(msg)
        return

    if callback.data.startswith("like:"):
        liked_id = int(callback.data.split(":")[1])
        await add_like(user_id, liked_id)
        is_match = await check_match(user_id, liked_id)
        language = await get_user_language(user_id)

        if is_match:
            liked_username = (await bot.get_chat(liked_id)).username or liked_id
            user_username = (await bot.get_chat(user_id)).username

            if language == "uk":
                await bot.send_message(user_id, f"üéâ –£ –≤–∞—Å –≤–∑–∞—î–º–Ω–∏–π –º–∞—Ç—á! –û—Å—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ @{liked_username}")
                if user_username:
                    await bot.send_message(liked_id, f"üéâ –£ –≤–∞—Å –≤–∑–∞—î–º–Ω–∏–π –º–∞—Ç—á! –û—Å—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ @{user_username}")
                else:
                    await bot.send_message(liked_id, f"üéâ –£ –≤–∞—Å –≤–∑–∞—î–º–Ω–∏–π –º–∞—Ç—á –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º ID {user_id}!")
            else:
                await bot.send_message(user_id, f"üéâ –£ –≤–∞—Å –≤–∑–∞–∏–º–Ω—ã–π –º–∞—Ç—á! –í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ @{liked_username}")
                if user_username:
                    await bot.send_message(liked_id, f"üéâ –£ –≤–∞—Å –≤–∑–∞–∏–º–Ω—ã–π –º–∞—Ç—á! –í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ @{user_username}")
                else:
                    await bot.send_message(liked_id, f"üéâ –£ –≤–∞—Å –≤–∑–∞–∏–º–Ω—ã–π –º–∞—Ç—á —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ID {user_id}!")

        await callback.answer("–¢–∏ –ª–∞–π–∫–Ω—É–≤!" if language == "uk" else "–¢—ã –ª–∞–π–∫–Ω—É–ª!")

    elif callback.data == "dislike":
        language = await get_user_language(user_id)
        await callback.answer("–ü—Ä–æ–ø—É—â–µ–Ω–æ." if language == "uk" else "–ü—Ä–æ–ø—É—â–µ–Ω–æ.")

    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –ø—Ä–æ—Ñ—ñ–ª—é
    user_profiles[user_id]["index"] += 1
    await show_profile(callback.message.chat.id, user_id)

async def cmd_start_view_profiles(message: types.Message):
    await show_profile(message.chat.id, message.from_user.id)

# –û—Å—å –Ω–æ–≤–∞ —Ñ—É–Ω–∫—Ü—ñ—è, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ ImportError
async def start_browsing_after_verification(user_id: int):
    # –ü—Ä–æ—Å—Ç–æ –ø–æ—á–∏–Ω–∞—î–º–æ –ø–æ–∫–∞–∑—É–≤–∞—Ç–∏ –∞–Ω–∫–µ—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
    await show_profile(user_id, user_id)

def register_handlers_profiles(dp: Dispatcher):
    dp.register_message_handler(cmd_start_view_profiles, lambda message: message.text == "üîç –ü–µ—Ä–µ–≥–ª—è–¥ –∞–Ω–∫–µ—Ç")
    dp.register_callback_query_handler(handle_callback, lambda c: c.data.startswith(("like:", "dislike")))
